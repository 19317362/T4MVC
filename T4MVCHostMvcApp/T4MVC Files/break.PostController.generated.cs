// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace T4MVCHostMvcApp.Areas.Break.Controllers
{
    public partial class PostController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PostController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ActionWithBindPrefixAttribute()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithBindPrefixAttribute);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ActionWithBindNoPrefixAttribute()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithBindNoPrefixAttribute);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ActionThatTakesAnObject()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionThatTakesAnObject);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ActionWithVariousParams()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithVariousParams);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CompiledControllerVirtualMethod2()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod2);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SameProjectBaseControllerMethod()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SameProjectBaseControllerMethod);
            return callInfo;
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CompiledControllerVirtualMethod()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod);
            return callInfo;
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PostController Actions { get { return MVC.@break.Post; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "break";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Post";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Post";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ActionWithBindPrefixAttribute = "ActionWithBindPrefixAttribute";
            public readonly string ActionWithBindNoPrefixAttribute = "ActionWithBindNoPrefixAttribute";
            public readonly string ActionThatTakesAnObject = "ActionThatTakesAnObject";
            public readonly string ActionWithVariousParams = "ActionWithVariousParams";
            public readonly string CompiledControllerVirtualMethod2 = "CompiledControllerVirtualMethod2";
            public readonly string SameProjectBaseControllerMethod = "SameProjectBaseControllerMethod";
            public readonly string CompiledControllerVirtualMethod = "CompiledControllerVirtualMethod";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ActionWithBindPrefixAttribute = "ActionWithBindPrefixAttribute";
            public const string ActionWithBindNoPrefixAttribute = "ActionWithBindNoPrefixAttribute";
            public const string ActionThatTakesAnObject = "ActionThatTakesAnObject";
            public const string ActionWithVariousParams = "ActionWithVariousParams";
            public const string CompiledControllerVirtualMethod2 = "CompiledControllerVirtualMethod2";
            public const string SameProjectBaseControllerMethod = "SameProjectBaseControllerMethod";
            public const string CompiledControllerVirtualMethod = "CompiledControllerVirtualMethod";
        }


        static readonly ActionParamsClass_ActionWithBindPrefixAttribute s_params_ActionWithBindPrefixAttribute = new ActionParamsClass_ActionWithBindPrefixAttribute();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActionWithBindPrefixAttribute ActionWithBindPrefixAttributeParams { get { return s_params_ActionWithBindPrefixAttribute; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActionWithBindPrefixAttribute
        {
            public readonly string fieldName = "newParamName";
        }
        static readonly ActionParamsClass_ActionWithBindNoPrefixAttribute s_params_ActionWithBindNoPrefixAttribute = new ActionParamsClass_ActionWithBindNoPrefixAttribute();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActionWithBindNoPrefixAttribute ActionWithBindNoPrefixAttributeParams { get { return s_params_ActionWithBindNoPrefixAttribute; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActionWithBindNoPrefixAttribute
        {
            public readonly string fieldName = "fieldName";
        }
        static readonly ActionParamsClass_ActionThatTakesAnObject s_params_ActionThatTakesAnObject = new ActionParamsClass_ActionThatTakesAnObject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActionThatTakesAnObject ActionThatTakesAnObjectParams { get { return s_params_ActionThatTakesAnObject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActionThatTakesAnObject
        {
            public readonly string p = "p";
        }
        static readonly ActionParamsClass_ActionWithVariousParams s_params_ActionWithVariousParams = new ActionParamsClass_ActionWithVariousParams();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ActionWithVariousParams ActionWithVariousParamsParams { get { return s_params_ActionWithVariousParams; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ActionWithVariousParams
        {
            public readonly string myString = "myString";
            public readonly string someInt = "someInt";
            public readonly string someObject = "someObject";
        }
        static readonly ActionParamsClass_CompiledControllerVirtualMethod2 s_params_CompiledControllerVirtualMethod2 = new ActionParamsClass_CompiledControllerVirtualMethod2();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CompiledControllerVirtualMethod2 CompiledControllerVirtualMethod2Params { get { return s_params_CompiledControllerVirtualMethod2; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CompiledControllerVirtualMethod2
        {
            public readonly string s = "s";
        }
        static readonly ActionParamsClass_SameProjectBaseControllerMethod s_params_SameProjectBaseControllerMethod = new ActionParamsClass_SameProjectBaseControllerMethod();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SameProjectBaseControllerMethod SameProjectBaseControllerMethodParams { get { return s_params_SameProjectBaseControllerMethod; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SameProjectBaseControllerMethod
        {
            public readonly string s = "s";
        }
        static readonly ActionParamsClass_CompiledControllerVirtualMethod s_params_CompiledControllerVirtualMethod = new ActionParamsClass_CompiledControllerVirtualMethod();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CompiledControllerVirtualMethod CompiledControllerVirtualMethodParams { get { return s_params_CompiledControllerVirtualMethod; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CompiledControllerVirtualMethod
        {
            public readonly string n = "n";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PostController : T4MVCHostMvcApp.Areas.Break.Controllers.PostController
    {
        public T4MVC_PostController() : base(Dummy.Instance) { }

        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        partial void ActionWithBindPrefixAttributeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fieldName);

        public override System.Web.Mvc.ActionResult ActionWithBindPrefixAttribute(string fieldName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithBindPrefixAttribute);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "newParamName", fieldName);
            ActionWithBindPrefixAttributeOverride(callInfo, fieldName);
            return callInfo;
        }

        partial void ActionWithBindNoPrefixAttributeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string fieldName);

        public override System.Web.Mvc.ActionResult ActionWithBindNoPrefixAttribute(string fieldName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithBindNoPrefixAttribute);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fieldName", fieldName);
            ActionWithBindNoPrefixAttributeOverride(callInfo, fieldName);
            return callInfo;
        }

        partial void ActionThatTakesAnObjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, T4MVCHostMvcApp.Areas.Break.Controllers.MyParamObject p);

        public override System.Web.Mvc.ActionResult ActionThatTakesAnObject(T4MVCHostMvcApp.Areas.Break.Controllers.MyParamObject p)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionThatTakesAnObject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "p", p);
            ActionThatTakesAnObjectOverride(callInfo, p);
            return callInfo;
        }

        partial void ActionWithVariousParamsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string myString, int someInt, object someObject);

        public override System.Web.Mvc.ActionResult ActionWithVariousParams(string myString, int someInt, object someObject)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionWithVariousParams);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "myString", myString);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "someInt", someInt);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "someObject", someObject);
            ActionWithVariousParamsOverride(callInfo, myString, someInt, someObject);
            return callInfo;
        }

        partial void CompiledControllerVirtualMethod2Override(T4MVC_System_Web_Mvc_ActionResult callInfo, string s);

        public override System.Web.Mvc.ActionResult CompiledControllerVirtualMethod2(string s)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod2);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "s", s);
            CompiledControllerVirtualMethod2Override(callInfo, s);
            return callInfo;
        }

        partial void SameProjectBaseControllerMethodOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string s);

        public override System.Web.Mvc.ActionResult SameProjectBaseControllerMethod(string s)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SameProjectBaseControllerMethod);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "s", s);
            SameProjectBaseControllerMethodOverride(callInfo, s);
            return callInfo;
        }

        partial void CompiledControllerVirtualMethodOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int n);

        public override System.Web.Mvc.ActionResult CompiledControllerVirtualMethod(int n)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "n", n);
            CompiledControllerVirtualMethodOverride(callInfo, n);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
